# This is a basic workflow to help you get started with Actions

name: build-and-deploy

env:
  PUBLISH_DIR: release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:

    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v2

    # sets up .NET Core SDK 3.1
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.203

    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish MarcelGrilo.Github.IO.csproj -c Release -o ${{ env.PUBLISH_DIR }} --nologo

    # base href url value should be changed so that resources like CSS and scripts can load properly.
    #- name: Rewrite base href
    #  if: success()
    #  uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
    #  with:
    #    html_path: ${{ env.PUBLISH_DIR }}/wwwroot/index.html
    #    base_href: REPOSITORY_NAME

    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. 
    # Allow files and folders starting with an underscore.
    - name: Add .nojekyll file
      run: touch ${{ env.PUBLISH_DIR }}/wwwroot/.nojekyll

    #  Commit wwwroot to GitHub Pages
    - name: Commit wwwroot to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: ${{ env.PUBLISH_DIR }}/wwwroot
